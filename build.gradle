plugins {
    id 'java'
//    id 'org.springframework.boot' version '3.4.3' apply false
    id 'org.springframework.boot' version '3.3.9' apply false
    id 'io.spring.dependency-management' version '1.1.7' apply false
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'io.spring.dependency-management'

    group = 'com.team1'
    version = '0.0.1-SNAPSHOT'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    repositories {
        mavenCentral()
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        // devtools
//        implementation 'org.springframework.boot:spring-boot-devtools'

        // validation
        implementation 'org.springframework.boot:spring-boot-starter-validation'

        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
    }

//    tasks.named('test') {
//        useJUnitPlatform()
//    }
}

project(':ET-api-gateway') {
    bootJar.enabled = true
    jar.enabled = false

    ext {
        set('springCloudVersion', "2023.0.5")
//        set('springCloudVersion', "2024.0.0")
    }

    dependencies {
        implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

        // jjwt
        implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
        implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
        implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

//        implementation 'io.jsonwebtoken:jjwt:0.9.1'
//        //jakarta.servlet
//        implementation 'jakarta.servlet:jakarta.servlet-api:6.0.0'

        // Spring Security
        implementation 'org.springframework.boot:spring-boot-starter-security'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

project(':ET-eureka') {
    bootJar.enabled = true
    jar.enabled = false

    ext {
//        set('springCloudVersion', "2024.0.0")
        set('springCloudVersion', "2023.0.5")
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

project(':ET-common') {
    bootJar.enabled = false
    jar.enabled = true

    dependencies {
        implementation ("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")

        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        // starter-web
        implementation 'org.springframework.boot:spring-boot-starter-web'
    }
}

project(':ET-user') {
    bootJar.enabled = true
    jar.enabled = false

    ext {
//        set('springCloudVersion', "2024.0.0")
        set('springCloudVersion', "2023.0.5")
    }

    dependencies {
        implementation project(':ET-common')
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        runtimeOnly 'com.mysql:mysql-connector-j'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
        // open feign
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

        implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
        implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
        implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

        implementation 'org.springframework.kafka:spring-kafka'

        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
//        // jjwt
//        implementation 'io.jsonwebtoken:jjwt:0.9.1'

//        // JAXB API 의존성
//        implementation 'javax.xml.bind:jaxb-api:2.3.1'
//
//        // JAXB 구현체
//        implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.4'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

project(':ET-core') {
    bootJar.enabled = true
    jar.enabled = false

    ext {
//        set('springCloudVersion', "2024.0.0")
        set('springCloudVersion', "2023.0.5")
    }

    dependencies {
        implementation project(':ET-common')
        implementation ("com.fasterxml.jackson.datatype:jackson-datatype-jsr310")

        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.kafka:spring-kafka'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        runtimeOnly 'com.mysql:mysql-connector-j'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

project(':ET-arcade') {
    bootJar.enabled = true
    jar.enabled = false

    ext {
//        set('springCloudVersion', "2024.0.0")
        set('springCloudVersion', "2023.0.5")
    }

    dependencies {
        implementation project(':ET-common')
        implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
        implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
        runtimeOnly 'com.mysql:mysql-connector-j'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }

    dependencyManagement {
        imports {
            mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
        }
    }
}

project(':ET-pipeline') {
    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter-data-redis'
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'org.java-websocket:Java-WebSocket:1.5.4'
        implementation 'org.bouncycastle:bcprov-jdk15on:1.70'
        implementation 'org.springframework.kafka:spring-kafka'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testImplementation 'org.springframework.kafka:spring-kafka-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    }
}